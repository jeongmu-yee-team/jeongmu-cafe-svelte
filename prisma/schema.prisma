generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admins {
  id         String       @id @db.VarChar(70)
  password   String       @db.VarChar(255)
  admin_name String       @db.VarChar(70)
  phone      String       @db.Char(11)
  created_at DateTime     @default(now()) @db.Timestamp(6)
  updated_at DateTime     @default(now()) @db.Timestamp(6)
  admins_log admins_log[]
}

model admins_log {
  id         Int      @id @default(autoincrement())
  admin_id   String   @db.VarChar(70)
  action     String?  @db.VarChar(255)
  ip         String?  @db.VarChar(15)
  agent      String?  @db.VarChar(255)
  language   String?  @db.Char(5)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  admins     admins   @relation(fields: [admin_id], references: [id], onDelete: NoAction)
}

model junc_option_order {
  option_type_id Int
  order_id       Int
  option_type    option_type @relation(fields: [option_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_item     order_item  @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([option_type_id, order_id])
}

model option_type {
  id                Int                 @id @default(autoincrement())
  product_type_id   Int?
  type_name         String              @unique @db.VarChar(50)
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  junc_option_order junc_option_order[]
  product_type      product_type?       @relation(fields: [product_type_id], references: [id])
  order_item        order_item[]
}

model order {
  id             Int          @id @default(autoincrement())
  accept         Boolean      @default(false)
  payment_status String       @db.VarChar(70)
  payment_method String       @db.VarChar(70)
  order_number   Int
  created_at     DateTime     @default(now()) @db.Timestamp(6)
  updated_at     DateTime     @default(now()) @db.Timestamp(6)
  order_item     order_item[]
}

model order_item {
  id                Int                 @id @default(autoincrement())
  order_id          Int?
  product_id        Int?
  option_id         Int?
  memo              String?             @default("") @db.VarChar(255)
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  junc_option_order junc_option_order[]
  option_type       option_type?        @relation(fields: [option_id], references: [id])
  order             order?              @relation(fields: [order_id], references: [id], onDelete: NoAction)
  product           product?            @relation(fields: [product_id], references: [id])
}

model page_image {
  id          Int      @id @default(autoincrement())
  image_title String?  @db.VarChar(70)
  image_url   String?  @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
}

model product {
  id                    Int           @id @default(autoincrement())
  product_name          String        @db.VarChar(70)
  product_thumbnail_url String?       @db.VarChar(255)
  product_price         Int           @default(0)
  product_type_id       Int?
  created_at            DateTime      @default(now()) @db.Timestamp(6)
  updated_at            DateTime      @default(now()) @db.Timestamp(6)
  sequence              Int?
  is_display            Boolean       @default(false)
  order_item            order_item[]
  product_type          product_type? @relation(fields: [product_type_id], references: [id])
}

model product_type {
  id          Int           @id @default(autoincrement())
  type_name   String        @unique @db.VarChar(70)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  option_type option_type[]
  product     product[]
}
